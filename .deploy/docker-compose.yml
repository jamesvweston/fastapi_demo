version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./.deploy/Dockerfile
    image: asdf:${ASDF_VERSION:-latest}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      APP_ENV: ${APP_ENV}
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      APP_RELOAD: ${APP_RELOAD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_BASE: ${DB_BASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./:/app/src
  db:
    image: postgres:13.6-bullseye
    hostname: asdf-db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - asdf-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U asdf
      interval: 2s
      timeout: 3s
      retries: 40
  migrator:
    profiles:
      - donotstart
    image: asdf:${ASDF_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      APP_ENV: ${APP_ENV}
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      APP_RELOAD: ${APP_RELOAD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_BASE: ${DB_BASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
  redis:
    image: bitnami/redis:6.2.5
    hostname: asdf-redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  asdf-db-data:
    name: asdf-db-data

